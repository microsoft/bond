---
name: Linux CI

# We want to skip workflow runs for commits that don't affect the build. We
# use negative path patterns instead of paths-ignore: if anything in
# paths-ignore matches, the workflow will be skipped, which is too
# aggressive. Instead, we want to skip if the commit(s) solely affects
# ignored files.
#
# See
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#example-using-positive-and-negative-patterns-1
on:
  push:
    branches: ["master"]
    paths:
      # Include everything by default
      - '**'
      # CHANGELOG.md is high-churn, but don't affect the build.
      #
      # NB: README.md is NOT in this list; the documentation build consumes
      # it.
      - '!CHANGELOG.md'
      - '!CONTRIBUTING.md'
      - '!SECURITY.md'
      # These files are only used by the Windows CI builds and don't affect
      # the Linux builds.
      - '!appveyor.yml'
      - '!tools/ci-scripts/windows/**'
  pull_request:
    branches: ["master"]
    paths:
      # Include everything by default
      - '**'
      # CHANGELOG.md is high-churn, but don't affect the build.
      #
      # NB: README.md is NOT in this list; the documentation build consumes
      # it.
      - '!CHANGELOG.md'
      - '!CONTRIBUTING.md'
      - '!SECURITY.md'
      # These files are only used by the Windows CI builds and don't affect
      # the Linux builds.
      - '!appveyor.yml'
      - '!tools/ci-scripts/windows/**'

jobs:
  tests:
    name: "${{ matrix.env.FLAVOR }} ${{ matrix.env.BOOST }} ${{ matrix.env.COMPILER }}"
    runs-on: "ubuntu-latest"

    container:
      image: bondciimages.azurecr.io/ubuntu-1804:build-54806381

    strategy:
      fail-fast: false
      matrix:
        env:
          - { FLAVOR: cs }
          - { FLAVOR: cpp-core, BOOST: 1.66.0, COMPILER: clang }
          - { FLAVOR: hs }
          - { FLAVOR: java }

    env: ${{ matrix.env }}

    steps:
      - name: "Git checkout"
        uses: "actions/checkout@v2"
        with:
          submodules: recursive

      - name: Cache stack
        uses: actions/cache@v2
        with:
          path: ~/.stack
          key: stack18-${{ matrix.env.FLAVOR }}-${{ matrix.env.BOOST }}-${{ matrix.env.COMPILER }}--${{ hashFiles('**/compiler/stack.yaml','**/compiler/package.yaml','**/compiler/stack.yaml.lock') }}
          restore-keys: |
            stack18-${{ matrix.env.FLAVOR }}-${{ matrix.env.BOOST }}-${{ matrix.env.COMPILER }}-

      - name: "Build and test for ${{ matrix.env.FLAVOR }} ${{ matrix.env.BOOST }} ${{ matrix.env.COMPILER }}"
        run: |
          set -xe
          mkdir -p /github/home/.stack
          sed -i 's@/root/bond@'"$(pwd)"'@g' tools/ci-scripts/linux/build.zsh
          sed -i 's@/root/bond@'"$(pwd)"'@g' tools/ci-scripts/linux/build_cpp-common.zsh
          zsh tools/ci-scripts/linux/build.zsh $(pwd) ${{ env.FLAVOR }} ${{ env.BOOST }} ${{ env.COMPILER}}
