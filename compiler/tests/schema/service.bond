import "basic_types.bond";
import "namespace_basic_types.bond"

namespace tests

struct dummy {
    0: int32 count;
}

// alias
using bar = dummy;

// Service definition using simple syntax
service Foo
{
    nothing foo11();
    nothing foo12(void);
    // test name conflict with _impl methods
    nothing foo12_impl(void);
    nothing foo13(BasicTypes);
    nothing foo14(bar);
    nothing foo15(tests2.OtherBasicTypes);

    void foo21();
    void foo22(void);
    void foo23(BasicTypes);
    void foo24(bar);

    BasicTypes foo31();
    BasicTypes foo32(void);
    BasicTypes foo33(BasicTypes);
    // test name conflict with gRC++ receive data member
    BasicTypes _rd_foo33(BasicTypes);
    BasicTypes foo34(bar);

    bar foo41();
    bar foo42(void);
    bar foo43(BasicTypes);
    bar foo44(bar);

    // test name conflict with historical gRPC++ cq parameter
    BasicTypes cq();

    // test name conflict with generated MethodTemplate struct names
    void foo11_type();

    // test name conflicts with MethodTemplate names
    void MethodTemplate();
    void service_type();
    void input_type();
    void result_type();
    void metadata();
    void method();
}
